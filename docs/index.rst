.. proplot documentation master file, created by
   sphinx-quickstart on Wed Feb 20 01:31:20 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

=======
ProPlot
=======

A comprehensive, easy-to-use `matplotlib <https://matplotlib.org/>`__ wrapper for making beautiful, publication-quality graphics. The Github page is `here <https://github.com/lukelbd/proplot>`__.

Installation
============

This package is a work-in-progress -- currently, there is no formal release
on PyPi (but it's coming soon!). For the time being, you may install directly from Github using:

.. code-block:: bash

   pip install git+https://github.com/lukelbd/proplot.git

To upgrade to the latest version, run ``pip uninstall proplot``, then re-install.

The dependencies are `matplotlib <https://matplotlib.org/>`__ and `numpy <http://www.numpy.org/>`__.  The optional geographic mapping features require `cartopy <https://scitools.org.uk/cartopy/docs/latest/>`__ and/or `basemap <https://matplotlib.org/basemap/index.html>`__.

Importing
=========

I recommend importing ProPlot with

.. code-block:: python

   import proplot as plot

This differentiates ProPlot from the usual "``plt``" abbreviation used for the `~matplotlib.pyplot` module.

Overview
========

Importing ProPlot registers a bunch of new colormaps and color names.
If this is all you want and you don't care about other features, simply
import ProPlot at the top of your script. See `~proplot.colortools` and the :ref:`Registered colormaps`, :ref:`Registered color cycles`, and :ref:`Registered color names` tables for details.

Most of ProPlot's features derive from the `~proplot.subplots.subplots` command, inspired
by the pyplot `~matplotlib.pyplot.subplots` command.
This generates a scaffolding of specially subclassed axes, and has a bunch of other useful features.

The next most important utility is the `~proplot.axes.Axes.format` method, available
on every axes generated by `~proplot.subplots.subplots`. Use this method to fine-tune your axis properties, titles, labels, limits, and much more.

Here are some highlights of the remaining features:

*  Improvements to and automatic application of the
   `tight layout <https://matplotlib.org/3.1.1/tutorials/intermediate/tight_layout_guide.html>`__ 
   feature. Figure width and height is allowed to vary
   so that subplot aspect ratios remain fixed, which is particularly useful
   for grids of map projections and images. Arbitrary physical units, including
   *metric* units like ``cm`` and ``mm``, can be used for sizing arguments.
*  Axes panels and figure panels, generally used for colorbars and legends
   that refer to multiple subplots at once. New "inset" colorbars.
   Colorbars from lists of lines or colors. Legends with centered
   rows instead of aligned columns.
*  Helpful `~proplot.axistools.Locator`, `~proplot.axistools.Formatter`,
   `~proplot.axistools.Scale`, `~proplot.projs.Proj`, `~proplot.colortools.Norm`,
   `~proplot.colortools.Colormap`, and `~proplot.colortools.Cycle` constructor
   functions, integrated with the `~proplot.axes.Axes.format` command,
   `~proplot.subplots.subplots` command, and
   plotting commands. More power and less boilerplate code.
*  Automatic axes, colorbar, and legend formatting when
   `xarray.DataArray`, `pandas.DataFrame`, or `pandas.Series` objects are passed
   to a plotting command, just like their respective ``plot`` methods.
*  Beautiful new colormaps, named "color cycles", and easy-to-remember
   color names. Tools for merging colormaps and making new "perceptually
   uniform" colormaps on-the-fly. Tools for slicing and modifying existing
   colormaps.
*  Global setting customization with a user ``.proplotrc`` file. Save custom
   colormaps, color cycles, and fonts in a user ``.proplot`` folder, and they
   will be loaded every time on startup.
*  Integration with basemap and cartopy. Generate arbitrary
   grids of arbitrary map projections in one go. Switch between the cartopy and
   basemap backends painlessly. Simplified plotting commands.
   Add geographic features and custom meridian and parallel gridlines and
   labels with the `~proplot.axes.Axes.format` command.

To get started, check out the :ref:`Introduction`.

.. :hidden: means do not put a table of links right here but include links in sidebar

.. _MIT: LICENSE.txt

.. toctree::
   :hidden:
   :maxdepth: 4
   :caption: Overview

   intro
   cartesian
   projection
   colors
   plots

.. toctree::
   :hidden:
   :maxdepth: 4
   :caption: API Reference

   subplots
   axes
   rctools
   projs
   axistools
   styletools
   utils


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
